{"version":3,"file":"static/js/343.f43a3a3b.chunk.js","mappings":"2LAEaA,EAAOC,EAAAA,GAAAA,KAAH,yC,GAIIA,EAAAA,GAAAA,MAAH,6F,8ECALC,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAASF,EAAAA,EAAAA,IAAYG,EAAAA,IAc3B,OACE,SAACC,EAAA,EAAD,CAAWC,UAAU,MAAMC,SAAS,KAAKC,MAAO,CAAED,SAAU,KAA5D,UACE,UAACE,EAAA,EAAD,CACEC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,gBAAiB,QACjBC,QAAS,OACTC,UAAW,mCARf,WAWE,eAAIT,MAAO,CAAEU,UAAW,SAAUC,WAAY,aAA9C,uBAGA,UAACvB,EAAD,CAAMwB,SA5BS,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfzB,EAAO,CACL0B,MAAOF,EAAKG,SAASD,MAAME,MAC3BC,SAAUL,EAAKG,SAASE,SAASD,QAE9B3B,GAAwB,OAAXG,GAChBoB,EAAKM,OAER,EAkBmCC,aAAa,MAA3C,WACE,SAACC,EAAA,EAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,WAAS,EACTC,MAAM,QACNC,KAAK,QACLP,aAAa,QACbQ,KAAK,QACLC,QAAQ,cAEV,SAACR,EAAA,EAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTG,KAAK,WACLD,MAAM,WACNE,KAAK,WACLR,aAAa,mBACbS,QAAQ,aAETvC,GACC,SAACwC,EAAA,EAAD,CAAQN,WAAS,EAACK,QAAQ,YAAY/B,MAAO,CAAEG,UAAW,IAA1D,UACE,SAAC,KAAD,CAAM8B,OAAQ,GAAIC,OAAO,YAG3B,SAACF,EAAA,EAAD,CACEF,KAAK,SACLJ,WAAS,EACTK,QAAQ,YACR/B,MAAO,CAAEG,UAAW,IAJtB,2BAaX,E,8BCtEc,SAASgC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACX1C,GAASF,EAAAA,EAAAA,IAAYG,EAAAA,KAE3B0C,EAAAA,EAAAA,YAAU,WACO,wCAAX3C,IACF4C,EAAAA,GAAAA,MACE,4FAEFH,GAASI,EAAAA,EAAAA,OAEZ,GAAE,CAAC7C,EAAQyC,IAMZ,OACE,4BACE,sCAEA,SAAC9C,EAAD,CAAWC,OARI,SAAAkD,GACjBL,GAASM,EAAAA,EAAAA,IAAMD,GAChB,MASF,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/Login.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 320px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n`;\n","import { Form } from './LoginForm.styled';\nimport { Button, TextField, Box, Container } from '@mui/material';\nimport { Puff } from 'react-loading-icons';\nimport { useSelector } from 'react-redux';\nimport { selectAuthIsLoading, selectAuthError } from 'redux/auth/selectors';\n\nexport const LoginForm = ({ onData }) => {\n  const isLoading = useSelector(selectAuthIsLoading);\n  const status = useSelector(selectAuthError);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    onData({\n      email: form.elements.email.value,\n      password: form.elements.password.value,\n    });\n    if (!isLoading && status !== null) {\n      form.reset();\n    }\n  };\n\n  return (\n    <Container component=\"div\" maxWidth=\"xs\" style={{ maxWidth: 440 }}>\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          backgroundColor: 'white',\n          padding: '20px',\n          boxShadow: ' rgb(33 33 33) 0px 2px 10px 1px',\n        }}\n      >\n        <h1 style={{ textAlign: 'center', fontFamily: 'monospace' }}>\n          Entrance\n        </h1>\n        <Form onSubmit={handleSubmit} autoComplete=\"off\">\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            autoFocus\n            label=\"Email\"\n            name=\"email\"\n            autoComplete=\"email\"\n            type=\"email\"\n            variant=\"standard\"\n          />\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            variant=\"standard\"\n          />\n          {isLoading ? (\n            <Button fullWidth variant=\"contained\" style={{ marginTop: 30 }}>\n              <Puff height={22} stroke=\"#fff\" />\n            </Button>\n          ) : (\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              style={{ marginTop: 30 }}\n            >\n              Log In\n            </Button>\n          )}\n        </Form>\n      </Box>\n    </Container>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\nimport toast from 'react-hot-toast';\nimport { useSelector } from 'react-redux';\nimport { selectAuthError } from 'redux/auth/selectors';\nimport { useDispatch } from 'react-redux';\nimport { logIn, clearAuthError } from 'redux/auth/operations';\nimport { useEffect } from 'react';\n\nexport default function Login() {\n  const dispatch = useDispatch();\n  const status = useSelector(selectAuthError);\n\n  useEffect(() => {\n    if (status === 'Request failed with status code 400') {\n      toast.error(\n        'You have entered an incorrect email address or password, or you have not yet registered!'\n      );\n      dispatch(clearAuthError());\n    }\n  }, [status, dispatch]);\n\n  const onRegister = data => {\n    dispatch(logIn(data));\n  };\n\n  return (\n    <div>\n      <title>Login</title>\n\n      <LoginForm onData={onRegister} />\n    </div>\n  );\n}\n"],"names":["Form","styled","LoginForm","onData","isLoading","useSelector","selectAuthIsLoading","status","selectAuthError","Container","component","maxWidth","style","Box","sx","marginTop","display","flexDirection","alignItems","backgroundColor","padding","boxShadow","textAlign","fontFamily","onSubmit","e","preventDefault","form","currentTarget","email","elements","value","password","reset","autoComplete","TextField","margin","required","fullWidth","autoFocus","label","name","type","variant","Button","height","stroke","Login","dispatch","useDispatch","useEffect","toast","clearAuthError","data","logIn"],"sourceRoot":""}